{
  "ast": null,
  "code": "import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport ActionBarImage from \"./pages/ActionBarImage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n\nfunction DetailsScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Page de la pub s\\xE9lectionn\\xE9e\"\n    })\n  });\n}\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(View, {\n      style: {\n        flex: 0.8\n      },\n      children: [_jsx(Text, {\n        style: styles.listText,\n        children: \"Formats\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        children: [_jsx(Button, {\n          title: \"InRead\",\n          onPress: function onPress() {\n            return navigation.navigate('Details');\n          }\n        }), _jsx(Button, {\n          title: \"Native\",\n          onPress: function onPress() {\n            return Alert.alert(\"Afficher pub Native sur nouvelle vue\");\n          }\n        })]\n      }), _jsx(Text, {\n        style: styles.listText,\n        children: \"Providers\"\n      }), _jsx(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        children: _jsx(Button, {\n          title: \"Direct\",\n          onPress: function onPress() {\n            return Alert.alert(\"Afficher pub inRead sur nouvelle vue\");\n          }\n        })\n      }), _jsx(Text, {\n        style: styles.listText,\n        children: \"Creatives\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        children: [_jsx(Button, {\n          title: \"Landscape\",\n          onPress: function onPress() {\n            return Alert.alert(\"Afficher pub inRead sur nouvelle vue\");\n          }\n        }), _jsx(Button, {\n          title: \"Vertical\",\n          onPress: function onPress() {\n            return Alert.alert(\"Afficher pub inRead sur nouvelle vue\");\n          }\n        }), _jsx(Button, {\n          title: \"Square\",\n          onPress: function onPress() {\n            return Alert.alert(\"Afficher pub inRead sur nouvelle vue\");\n          }\n        })]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        children: [_jsx(Button, {\n          title: \"Caroussel\",\n          onPress: function onPress() {\n            return Alert.alert(\"Afficher pub inRead sur nouvelle vue\");\n          }\n        }), _jsx(Button, {\n          title: \"Custom\",\n          onPress: function onPress() {\n            return Alert.alert(\"Afficher pub inRead sur nouvelle vue\");\n          }\n        })]\n      }), _jsx(Text, {\n        style: styles.listText,\n        children: \"Integrations\"\n      }), _jsx(View, {\n        style: {\n          flexDirection: \"row\"\n        }\n      })]\n    })\n  });\n}\n\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: \"SampleApp\",\n          headerRight: function headerRight() {\n            return _jsx(ActionBarImage, {});\n          }\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Details\",\n        component: DetailsScreen,\n        options: {\n          title: \"Teads InReads\",\n          headerRight: function headerRight() {\n            return _jsx(ActionBarImage, {});\n          }\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  tinyLogo: {\n    width: 160,\n    height: 70,\n    resizeMode: \"cover\"\n  },\n  listText: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  }\n});",
  "map": {
    "version": 3,
    "sources": ["/Users/numa.maurin/Documents/TeadsSDK-ReactNative/App.js"],
    "names": [
      "React",
      "NavigationContainer",
      "createNativeStackNavigator",
      "ActionBarImage",
      "Stack",
      "DetailsScreen",
      "flex",
      "alignItems",
      "justifyContent",
      "HomeScreen",
      "navigation",
      "styles",
      "listText",
      "flexDirection",
      "navigate",
      "Alert",
      "alert",
      "App",
      "title",
      "headerRight",
      "StyleSheet",
      "create",
      "container",
      "backgroundColor",
      "tinyLogo",
      "width",
      "height",
      "resizeMode",
      "fontSize",
      "fontWeight"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import { StyleSheet, Text, View, Image } from \"react-native\";\nimport { Button, Alert } from \"react-native\";\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport ActionBarImage from './pages/ActionBarImage';\n\nconst Stack = createNativeStackNavigator();\n\nfunction DetailsScreen() {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text>Page de la pub sélectionnée</Text>\n    </View>\n  );\n}\n\nfunction HomeScreen({ navigation }) {\n  return (\n    <View style={{ flex: 1 }}>\n    \n\n      <View style={{ flex: 0.8}}>\n        <Text style={styles.listText}>Formats</Text>\n        <View style={{ flexDirection: \"row\" }}>\n          <Button\n            title=\"InRead\"\n            onPress={() => navigation.navigate('Details')}\n          />\n          <Button\n            title=\"Native\"\n            onPress={() => Alert.alert(\"Afficher pub Native sur nouvelle vue\")}\n          />\n        </View>\n\n        <Text style={styles.listText}>Providers</Text>\n        <View style={{ flexDirection: \"row\" }}>\n          <Button\n            title=\"Direct\"\n            onPress={() => Alert.alert(\"Afficher pub inRead sur nouvelle vue\")}\n          />\n         \n        </View>\n\n        <Text style={styles.listText}>Creatives</Text>\n        <View style={{ flexDirection: \"row\" }}>\n          <Button\n            title=\"Landscape\"\n            onPress={() => Alert.alert(\"Afficher pub inRead sur nouvelle vue\")}\n          />\n          <Button\n            title=\"Vertical\"\n            onPress={() => Alert.alert(\"Afficher pub inRead sur nouvelle vue\")}\n          />\n          <Button\n            title=\"Square\"\n            onPress={() => Alert.alert(\"Afficher pub inRead sur nouvelle vue\")}\n          />\n        </View>\n        <View style={{ flexDirection: \"row\" }}>\n          <Button\n            title=\"Caroussel\"\n            onPress={() => Alert.alert(\"Afficher pub inRead sur nouvelle vue\")}\n          />\n          <Button\n            title=\"Custom\"\n            onPress={() => Alert.alert(\"Afficher pub inRead sur nouvelle vue\")}\n          />\n        </View>\n\n        <Text style={styles.listText}>Integrations</Text>\n  <View style={{ flexDirection: \"row\" }}></View>\n      </View>\n    </View>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"Home\"\n          component={HomeScreen}\n          options={{ title: \"SampleApp\",headerRight: () => <ActionBarImage />, }}\n        />\n        <Stack.Screen name=\"Details\" component={DetailsScreen} options={{ title: \"Teads InReads\",headerRight: () => <ActionBarImage />, }}/>\n        \n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  tinyLogo: {\n    width: 160,\n    height: 70,\n    resizeMode: \"cover\",\n  },\n  listText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n});\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
