{
  "ast": null,
  "code": "import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport ActionBarImage from \"./pages/ActionBarImage\";\nimport HTMLView from \"react-native-htmlview\";\nimport Article from \"./components/Article\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(View, {\n      style: {\n        flex: 0.8\n      },\n      children: [_jsx(Text, {\n        style: styles.listText,\n        children: \"Formats\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          padding: 10,\n          alignItems: \"stretch\"\n        },\n        children: [_jsx(Pressable, {\n          style: styles.button,\n          onPress: function onPress() {\n            return navigation.navigate(\"Details\");\n          },\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \"InRead\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: function onPress() {\n            return Alert.alert(\"Afficher pub Native sur nouvelle vue\");\n          },\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \"Native\"\n          })\n        })]\n      }), _jsx(Text, {\n        style: styles.listText,\n        children: \"Providers\"\n      }), _jsx(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          padding: 10\n        },\n        children: _jsx(Pressable, {\n          style: styles.button,\n          onPress: function onPress() {\n            return Alert.alert(\"Afficher pub Native sur nouvelle vue\");\n          },\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \"Direct\"\n          })\n        })\n      }), _jsx(Text, {\n        style: styles.listText,\n        children: \"Creatives\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          padding: 10,\n          alignItems: \"stretch\"\n        },\n        children: [_jsx(Pressable, {\n          style: styles.button,\n          onPress: function onPress() {\n            return Alert.alert(\"Afficher pub Native sur nouvelle vue\");\n          },\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \"Landscape\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: function onPress() {\n            return Alert.alert(\"Afficher pub Native sur nouvelle vue\");\n          },\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \"Vertical\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: function onPress() {\n            return Alert.alert(\"Afficher pub Native sur nouvelle vue\");\n          },\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \"Button\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"center\"\n        },\n        children: [_jsx(Pressable, {\n          style: styles.button,\n          onPress: function onPress() {\n            return Alert.alert(\"Afficher pub Native sur nouvelle vue\");\n          },\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \"Caroussel\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: function onPress() {\n            return Alert.alert(\"Afficher pub Native sur nouvelle vue\");\n          },\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \"Custom\"\n          })\n        })]\n      }), _jsx(Text, {\n        style: styles.listText,\n        children: \"Integrations\"\n      }), _jsx(View, {\n        style: {\n          flexDirection: \"row\"\n        }\n      })]\n    })\n  });\n}\n\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: \"SAMPLEAPP\",\n          headerLeft: function headerLeft() {\n            return _jsx(ActionBarImage, {});\n          }\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Details\",\n        component: Article,\n        options: {\n          title: \"Demo\",\n          headerRight: function headerRight() {\n            return _jsx(ActionBarImage, {});\n          }\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  listText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    padding: 10\n  },\n  button: {\n    alignItems: \"stretch\",\n    justifyContent: \"center\",\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 20,\n    elevation: 3,\n    backgroundColor: \"#0818B3\"\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: \"bold\",\n    letterSpacing: 0.25,\n    color: \"white\"\n  }\n});",
  "map": {
    "version": 3,
    "sources": ["/Users/numa.maurin/Documents/TeadsSDK-ReactNative/App.js"],
    "names": [
      "React",
      "NavigationContainer",
      "createNativeStackNavigator",
      "ActionBarImage",
      "HTMLView",
      "Article",
      "Stack",
      "HomeScreen",
      "navigation",
      "flex",
      "styles",
      "listText",
      "flexDirection",
      "justifyContent",
      "padding",
      "alignItems",
      "button",
      "navigate",
      "text",
      "Alert",
      "alert",
      "App",
      "title",
      "headerLeft",
      "headerRight",
      "StyleSheet",
      "create",
      "container",
      "backgroundColor",
      "fontSize",
      "fontWeight",
      "paddingVertical",
      "paddingHorizontal",
      "borderRadius",
      "elevation",
      "lineHeight",
      "letterSpacing",
      "color"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import { StyleSheet, Text, View, Pressable, Alert } from \"react-native\";\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport ActionBarImage from \"./pages/ActionBarImage\";\nimport HTMLView from \"react-native-htmlview\";\nimport Article from \"./components/Article\"\n\nconst Stack = createNativeStackNavigator();\n\n\nfunction HomeScreen({ navigation }) {\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flex: 0.8 }}>\n        <Text style={styles.listText}>Formats</Text>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            padding: 10,\n            alignItems: \"stretch\",\n          }}\n        >\n          <Pressable\n            style={styles.button}\n            onPress={() => navigation.navigate(\"Details\")}\n          >\n            <Text style={styles.text}>InRead</Text>\n          </Pressable>\n\n          <Pressable\n            style={styles.button}\n            onPress={() => Alert.alert(\"Afficher pub Native sur nouvelle vue\")}\n          >\n            <Text style={styles.text}>Native</Text>\n          </Pressable>\n        </View>\n\n        <Text style={styles.listText}>Providers</Text>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            padding: 10,\n          }}\n        >\n          <Pressable\n            style={styles.button}\n            onPress={() => Alert.alert(\"Afficher pub Native sur nouvelle vue\")}\n          >\n            <Text style={styles.text}>Direct</Text>\n          </Pressable>\n        </View>\n\n        <Text style={styles.listText}>Creatives</Text>\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            padding: 10,\n            alignItems: \"stretch\",}}\n        >\n          <Pressable\n            style={styles.button}\n            onPress={() => Alert.alert(\"Afficher pub Native sur nouvelle vue\"\n            )}\n          >\n            <Text style={styles.text}>Landscape</Text>\n          </Pressable>\n          <Pressable\n            style={styles.button}\n            onPress={() => Alert.alert(\"Afficher pub Native sur nouvelle vue\")}\n          >\n            <Text style={styles.text}>Vertical</Text>\n          </Pressable>\n          <Pressable\n            style={styles.button}\n            onPress={() => Alert.alert(\"Afficher pub Native sur nouvelle vue\")}\n          >\n            <Text style={styles.text}>Button</Text>\n          </Pressable>\n        </View>\n        <View style={{ flexDirection: \"row\", justifyContent: \"center\" }}>\n          <Pressable\n            style={styles.button}\n            onPress={() => Alert.alert(\"Afficher pub Native sur nouvelle vue\")}\n          >\n            <Text style={styles.text}>Caroussel</Text>\n          </Pressable>\n          <Pressable\n            style={styles.button}\n            onPress={() => Alert.alert(\"Afficher pub Native sur nouvelle vue\")}\n          >\n            <Text style={styles.text}>Custom</Text>\n          </Pressable>\n        </View>\n\n        <Text style={styles.listText}>Integrations</Text>\n        <View style={{ flexDirection: \"row\" }}></View>\n      </View>\n    </View>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen\n          name=\"Home\"\n          component={HomeScreen}\n          options={{ title: \"SAMPLEAPP\", headerLeft: () => <ActionBarImage /> }}\n        />\n        <Stack.Screen\n          name=\"Details\"\n          component={Article}\n          options={{\n            title: \"Demo\",\n            headerRight: () => <ActionBarImage />,\n          }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  listText: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    padding: 10,\n  },\n  button: {\n    alignItems: \"stretch\",\n    justifyContent: \"center\",\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 20,\n    elevation: 3,\n    backgroundColor: \"#0818B3\",\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: \"bold\",\n    letterSpacing: 0.25,\n    color: \"white\",\n  },\n});\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
